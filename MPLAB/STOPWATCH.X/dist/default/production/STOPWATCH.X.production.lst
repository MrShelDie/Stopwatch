

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jun 18 15:34:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F628A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  008C                     	;# 
    87  008E                     	;# 
    88  0092                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009F                     	;# 
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  008C                     	;# 
   124  008E                     	;# 
   125  0092                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009F                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001F                     	;# 
   157  0081                     	;# 
   158  0085                     	;# 
   159  0086                     	;# 
   160  008C                     	;# 
   161  008E                     	;# 
   162  0092                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009A                     	;# 
   166  009B                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009F                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  008C                     	;# 
   198  008E                     	;# 
   199  0092                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009F                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0015                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001F                     	;# 
   231  0081                     	;# 
   232  0085                     	;# 
   233  0086                     	;# 
   234  008C                     	;# 
   235  008E                     	;# 
   236  0092                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009A                     	;# 
   240  009B                     	;# 
   241  009C                     	;# 
   242  009D                     	;# 
   243  009F                     	;# 
   244  0006                     _PORTB	set	6
   245  0005                     _PORTAbits	set	5
   246  001F                     _CMCON	set	31
   247  000B                     _INTCONbits	set	11
   248  0081                     _OPTION_REG	set	129
   249  0081                     _OPTION_REGbits	set	129
   250  0086                     _TRISB	set	134
   251  0085                     _TRISA	set	133
   252                           
   253                           	psect	cinit
   254  07F5                     start_initialization:	
   255                           ; #config settings
   256                           
   257  07F5                     __initialization:
   258                           
   259                           ; Clear objects allocated to BANK0
   260  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   261  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   262  07F7  01A0               	clrf	__pbssBANK0& (0+127)
   263  07F8  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   264  07F9  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   265  07FA  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   266  07FB  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   267  07FC  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   268  07FD  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   269  07FE                     end_of_initialization:	
   270                           ;End of C runtime variable initialization code
   271                           
   272  07FE                     __end_of__initialization:
   273  07FE  0183               	clrf	3
   274  07FF  2DD9               	ljmp	_main	;jump to C main() function
   275                           
   276                           	psect	bssBANK0
   277  0020                     __pbssBANK0:
   278  0020                     _formatted_time:
   279  0020                     	ds	3
   280  0023                     _time_ms:
   281  0023                     	ds	2
   282  0025                     _is_timer_work:
   283  0025                     	ds	1
   284  0026                     _Button:
   285  0026                     	ds	1
   286                           
   287                           	psect	cstackCOMMON
   288  0070                     __pcstackCOMMON:
   289  0070                     ?_reset_stopwatch:
   290  0070                     ??_reset_stopwatch:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_update_disp:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_handle_btn_pressing:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ??_handle_btn_pressing:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_get_btn_pressed:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_update_time_counter:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ??_update_time_counter:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_stop_stopwatch:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ??_stop_stopwatch:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_start_stopwatch:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ??_start_stopwatch:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_configure:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ??_configure:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_main:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_is_btn_bounce:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ??_is_btn_bounce:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_format_time:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_set_disp_digit_value:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ??_set_disp_digit_value:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?___lwdiv:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     is_btn_bounce@btn:	
   351                           ; 2 bytes @ 0x0
   352                           
   353  0070                     ___lwdiv@divisor:	
   354                           ; 1 bytes @ 0x0
   355                           
   356                           
   357                           ; 2 bytes @ 0x0
   358  0070                     	ds	1
   359  0071                     is_btn_bounce@i:
   360                           
   361                           ; 2 bytes @ 0x1
   362  0071                     	ds	1
   363  0072                     handle_btn_pressing@btn:
   364  0072                     set_disp_digit_value@value:	
   365                           ; 1 bytes @ 0x2
   366                           
   367  0072                     ___lwdiv@dividend:	
   368                           ; 1 bytes @ 0x2
   369                           
   370                           
   371                           ; 2 bytes @ 0x2
   372  0072                     	ds	1
   373  0073                     ??_get_btn_pressed:
   374                           
   375                           ; 1 bytes @ 0x3
   376  0073                     	ds	1
   377  0074                     ??___lwdiv:
   378  0074                     get_btn_pressed@btn:	
   379                           ; 1 bytes @ 0x4
   380                           
   381                           
   382                           ; 1 bytes @ 0x4
   383  0074                     	ds	1
   384  0075                     ___lwdiv@quotient:
   385                           
   386                           ; 2 bytes @ 0x5
   387  0075                     	ds	2
   388  0077                     ___lwdiv@counter:
   389                           
   390                           ; 1 bytes @ 0x7
   391  0077                     	ds	1
   392  0078                     ?___lwmod:
   393  0078                     ___lwmod@divisor:	
   394                           ; 2 bytes @ 0x8
   395                           
   396                           
   397                           ; 2 bytes @ 0x8
   398  0078                     	ds	2
   399  007A                     ___lwmod@dividend:
   400                           
   401                           ; 2 bytes @ 0xA
   402  007A                     	ds	2
   403  007C                     ??___lwmod:
   404                           
   405                           ; 1 bytes @ 0xC
   406  007C                     	ds	1
   407  007D                     ___lwmod@counter:
   408                           
   409                           ; 1 bytes @ 0xD
   410  007D                     	ds	1
   411  007E                     ??_main:
   412                           
   413                           	psect	cstackBANK0
   414  0027                     __pcstackBANK0:	
   415                           ; 1 bytes @ 0xE
   416                           
   417  0027                     ??_format_time:
   418                           
   419                           ; 1 bytes @ 0x0
   420  0027                     	ds	1
   421  0028                     format_time@cashed_time:
   422                           
   423                           ; 2 bytes @ 0x1
   424  0028                     	ds	2
   425  002A                     ??_update_disp:
   426                           
   427                           ; 1 bytes @ 0x3
   428  002A                     	ds	1
   429                           
   430                           	psect	maintext
   431  05D9                     __pmaintext:	
   432 ;;
   433 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   434 ;;
   435 ;; *************** function _main *****************
   436 ;; Defined at:
   437 ;;		line 33 in file "main.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   446 ;; Tracked objects:
   447 ;;		On entry : B00/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   451 ;;      Params:         0       0       0       0
   452 ;;      Locals:         0       0       0       0
   453 ;;      Temps:          0       0       0       0
   454 ;;      Totals:         0       0       0       0
   455 ;;Total ram usage:        0 bytes
   456 ;; Hardware stack levels required when called: 3
   457 ;; This function calls:
   458 ;;		_configure
   459 ;;		_get_btn_pressed
   460 ;;		_handle_btn_pressing
   461 ;;		_reset_stopwatch
   462 ;;		_update_disp
   463 ;;		_update_time_counter
   464 ;; This function is called by:
   465 ;;		Startup code after reset
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           
   470                           ;psect for function _main
   471  05D9                     _main:
   472  05D9                     l1078:	
   473                           ;incstack = 0
   474                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   475                           
   476  05D9  25E1               	fcall	_configure
   477  05DA  25D3               	fcall	_reset_stopwatch
   478  05DB                     l1080:
   479  05DB  2653               	fcall	_update_disp
   480  05DC                     l1082:
   481  05DC  26C4               	fcall	_get_btn_pressed
   482  05DD  25F2               	fcall	_handle_btn_pressing
   483  05DE                     l1084:
   484  05DE  260E               	fcall	_update_time_counter
   485  05DF  2DDB               	goto	l1080
   486  05E0  2800               	ljmp	start
   487  05E1                     __end_of_main:
   488                           
   489                           	psect	text1
   490  060E                     __ptext1:	
   491 ;; *************** function _update_time_counter *****************
   492 ;; Defined at:
   493 ;;		line 42 in file "stopwatch.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   507 ;;      Params:         0       0       0       0
   508 ;;      Locals:         0       0       0       0
   509 ;;      Temps:          0       0       0       0
   510 ;;      Totals:         0       0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           
   521                           ;psect for function _update_time_counter
   522  060E                     _update_time_counter:
   523  060E                     l1072:	
   524                           ;incstack = 0
   525                           ; Regs used in _update_time_counter: [wreg+status,2+status,0]
   526                           
   527                           
   528                           ;stopwatch.c: 44:     if (is_timer_work)
   529  060E  1283               	bcf	3,5	;RP0=0, select bank0
   530  060F  1303               	bcf	3,6	;RP1=0, select bank0
   531  0610  0825               	movf	_is_timer_work,w
   532  0611  1903               	btfsc	3,2
   533  0612  2E14               	goto	u391
   534  0613  2E15               	goto	u390
   535  0614                     u391:
   536  0614  2E2A               	goto	l95
   537  0615                     u390:
   538  0615                     l1074:
   539                           
   540                           ;stopwatch.c: 45:     {;stopwatch.c: 46:         if (time_ms > 60000)
   541  0615  30EA               	movlw	234
   542  0616  0224               	subwf	_time_ms+1,w
   543  0617  3061               	movlw	97
   544  0618  1903               	skipnz
   545  0619  0223               	subwf	_time_ms,w
   546  061A  1C03               	skipc
   547  061B  2E1D               	goto	u401
   548  061C  2E1E               	goto	u400
   549  061D                     u401:
   550  061D  2E24               	goto	l94
   551  061E                     u400:
   552  061E                     l1076:
   553                           
   554                           ;stopwatch.c: 47:             time_ms -= 60000;
   555  061E  3060               	movlw	96
   556  061F  02A3               	subwf	_time_ms,f
   557  0620  30EA               	movlw	234
   558  0621  1C03               	skipc
   559  0622  03A4               	decf	_time_ms+1,f
   560  0623  02A4               	subwf	_time_ms+1,f
   561  0624                     l94:
   562                           
   563                           ;stopwatch.c: 48:         time_ms += 1;
   564  0624  3001               	movlw	1
   565  0625  07A3               	addwf	_time_ms,f
   566  0626  1803               	skipnc
   567  0627  0AA4               	incf	_time_ms+1,f
   568  0628  3000               	movlw	0
   569  0629  07A4               	addwf	_time_ms+1,f
   570  062A                     l95:
   571  062A  0008               	return
   572  062B                     __end_of_update_time_counter:
   573                           
   574                           	psect	text2
   575  0653                     __ptext2:	
   576 ;; *************** function _update_disp *****************
   577 ;; Defined at:
   578 ;;		line 53 in file "display.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   592 ;;      Params:         0       0       0       0
   593 ;;      Locals:         0       0       0       0
   594 ;;      Temps:          0       1       0       0
   595 ;;      Totals:         0       1       0       0
   596 ;;Total ram usage:        1 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; Hardware stack levels required when called: 2
   599 ;; This function calls:
   600 ;;		_format_time
   601 ;;		_set_disp_digit_value
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           
   608                           ;psect for function _update_disp
   609  0653                     _update_disp:
   610  0653                     l1030:	
   611                           ;incstack = 0
   612                           ; Regs used in _update_disp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   613                           
   614                           
   615                           ;display.c: 55:     format_time();
   616  0653  2747               	fcall	_format_time
   617  0654                     l1032:
   618                           
   619                           ;display.c: 57:     set_disp_digit_value(formatted_time.ms);
   620  0654  1283               	bcf	3,5	;RP0=0, select bank0
   621  0655  1303               	bcf	3,6	;RP1=0, select bank0
   622  0656  0820               	movf	_formatted_time,w
   623  0657  2798               	fcall	_set_disp_digit_value
   624  0658                     l1034:
   625                           
   626                           ;display.c: 58:     PORTAbits.RA0 = 1;
   627  0658  1283               	bcf	3,5	;RP0=0, select bank0
   628  0659  1303               	bcf	3,6	;RP1=0, select bank0
   629  065A  1405               	bsf	5,0	;volatile
   630  065B                     l1036:
   631                           
   632                           ;display.c: 59:     _delay((unsigned long)((1)*(4000000/4000.0)));
   633  065B  30C7               	movlw	199
   634  065C  1283               	bcf	3,5	;RP0=0, select bank0
   635  065D  1303               	bcf	3,6	;RP1=0, select bank0
   636  065E  00AA               	movwf	??_update_disp
   637  065F                     u417:
   638  065F  2E60               	nop2
   639  0660  0BAA               	decfsz	??_update_disp,f
   640  0661  2E5F               	goto	u417
   641  0662  2E63               	nop2
   642  0663  0000               	nop
   643  0664                     l1038:
   644                           
   645                           ;display.c: 60:     PORTAbits.RA0 = 0;
   646  0664  1283               	bcf	3,5	;RP0=0, select bank0
   647  0665  1303               	bcf	3,6	;RP1=0, select bank0
   648  0666  1005               	bcf	5,0	;volatile
   649  0667                     l1040:
   650                           
   651                           ;display.c: 62:     set_disp_digit_value(formatted_time.sec_1_digit);
   652  0667  0821               	movf	_formatted_time+1,w
   653  0668  2798               	fcall	_set_disp_digit_value
   654  0669                     l1042:
   655                           
   656                           ;display.c: 63:     PORTAbits.RA1 = 1;
   657  0669  1283               	bcf	3,5	;RP0=0, select bank0
   658  066A  1303               	bcf	3,6	;RP1=0, select bank0
   659  066B  1485               	bsf	5,1	;volatile
   660  066C                     l1044:
   661                           
   662                           ;display.c: 64:     _delay((unsigned long)((1)*(4000000/4000.0)));
   663  066C  30C7               	movlw	199
   664  066D  1283               	bcf	3,5	;RP0=0, select bank0
   665  066E  1303               	bcf	3,6	;RP1=0, select bank0
   666  066F  00AA               	movwf	??_update_disp
   667  0670                     u427:
   668  0670  2E71               	nop2
   669  0671  0BAA               	decfsz	??_update_disp,f
   670  0672  2E70               	goto	u427
   671  0673  2E74               	nop2
   672  0674  0000               	nop
   673  0675                     l1046:
   674                           
   675                           ;display.c: 65:     PORTAbits.RA1 = 0;
   676  0675  1283               	bcf	3,5	;RP0=0, select bank0
   677  0676  1303               	bcf	3,6	;RP1=0, select bank0
   678  0677  1085               	bcf	5,1	;volatile
   679  0678                     l1048:
   680                           
   681                           ;display.c: 67:     set_disp_digit_value(formatted_time.sec_2_digit);
   682  0678  0822               	movf	_formatted_time+2,w
   683  0679  2798               	fcall	_set_disp_digit_value
   684  067A                     l1050:
   685                           
   686                           ;display.c: 68:     PORTAbits.RA2 = 1;
   687  067A  1283               	bcf	3,5	;RP0=0, select bank0
   688  067B  1303               	bcf	3,6	;RP1=0, select bank0
   689  067C  1505               	bsf	5,2	;volatile
   690  067D                     l1052:
   691                           
   692                           ;display.c: 69:     _delay((unsigned long)((1)*(4000000/4000.0)));
   693  067D  30C7               	movlw	199
   694  067E  1283               	bcf	3,5	;RP0=0, select bank0
   695  067F  1303               	bcf	3,6	;RP1=0, select bank0
   696  0680  00AA               	movwf	??_update_disp
   697  0681                     u437:
   698  0681  2E82               	nop2
   699  0682  0BAA               	decfsz	??_update_disp,f
   700  0683  2E81               	goto	u437
   701  0684  2E85               	nop2
   702  0685  0000               	nop
   703  0686                     l1054:
   704                           
   705                           ;display.c: 70:     PORTAbits.RA2 = 0;
   706  0686  1283               	bcf	3,5	;RP0=0, select bank0
   707  0687  1303               	bcf	3,6	;RP1=0, select bank0
   708  0688  1105               	bcf	5,2	;volatile
   709  0689                     l124:
   710  0689  0008               	return
   711  068A                     __end_of_update_disp:
   712                           
   713                           	psect	text3
   714  0798                     __ptext3:	
   715 ;; *************** function _set_disp_digit_value *****************
   716 ;; Defined at:
   717 ;;		line 13 in file "display.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  value           1    wreg     unsigned char 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  value           1    2[COMMON] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   731 ;;      Params:         0       0       0       0
   732 ;;      Locals:         1       0       0       0
   733 ;;      Temps:          2       0       0       0
   734 ;;      Totals:         3       0       0       0
   735 ;;Total ram usage:        3 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_update_disp
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           
   745                           ;psect for function _set_disp_digit_value
   746  0798                     _set_disp_digit_value:
   747                           
   748                           ;incstack = 0
   749                           ; Regs used in _set_disp_digit_value: [wreg-fsr0h+status,2+status,0]
   750                           ;set_disp_digit_value@value stored from wreg
   751  0798  00F2               	movwf	set_disp_digit_value@value
   752  0799                     l1000:
   753                           
   754                           ;display.c: 13: static void set_disp_digit_value(char value);display.c: 14: {;display.c:
      +                           15:     switch(value)
   755  0799  2FCC               	goto	l1024
   756  079A                     l1002:
   757                           
   758                           ;display.c: 18:             PORTB = 0xC0;
   759  079A  30C0               	movlw	192
   760  079B  1283               	bcf	3,5	;RP0=0, select bank0
   761  079C  1303               	bcf	3,6	;RP1=0, select bank0
   762  079D  0086               	movwf	6	;volatile
   763                           
   764                           ;display.c: 19:             break;
   765  079E  2FF4               	goto	l121
   766  079F                     l1004:
   767                           
   768                           ;display.c: 21:             PORTB = 0xF9;
   769  079F  30F9               	movlw	249
   770  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   771  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   772  07A2  0086               	movwf	6	;volatile
   773                           
   774                           ;display.c: 22:             break;
   775  07A3  2FF4               	goto	l121
   776  07A4                     l1006:
   777                           
   778                           ;display.c: 24:             PORTB = 0xA4;
   779  07A4  30A4               	movlw	164
   780  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   781  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   782  07A7  0086               	movwf	6	;volatile
   783                           
   784                           ;display.c: 25:             break;
   785  07A8  2FF4               	goto	l121
   786  07A9                     l1008:
   787                           
   788                           ;display.c: 27:             PORTB = 0xB0;
   789  07A9  30B0               	movlw	176
   790  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   791  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   792  07AC  0086               	movwf	6	;volatile
   793                           
   794                           ;display.c: 28:             break;
   795  07AD  2FF4               	goto	l121
   796  07AE                     l1010:
   797                           
   798                           ;display.c: 30:             PORTB = 0x99;
   799  07AE  3099               	movlw	153
   800  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   801  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   802  07B1  0086               	movwf	6	;volatile
   803                           
   804                           ;display.c: 31:             break;
   805  07B2  2FF4               	goto	l121
   806  07B3                     l1012:
   807                           
   808                           ;display.c: 33:             PORTB = 0x92;
   809  07B3  3092               	movlw	146
   810  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   811  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   812  07B6  0086               	movwf	6	;volatile
   813                           
   814                           ;display.c: 34:             break;
   815  07B7  2FF4               	goto	l121
   816  07B8                     l1014:
   817                           
   818                           ;display.c: 36:             PORTB = 0x82;
   819  07B8  3082               	movlw	130
   820  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   821  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   822  07BB  0086               	movwf	6	;volatile
   823                           
   824                           ;display.c: 37:             break;
   825  07BC  2FF4               	goto	l121
   826  07BD                     l1016:
   827                           
   828                           ;display.c: 39:             PORTB = 0xF8;
   829  07BD  30F8               	movlw	248
   830  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   831  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   832  07C0  0086               	movwf	6	;volatile
   833                           
   834                           ;display.c: 40:             break;
   835  07C1  2FF4               	goto	l121
   836  07C2                     l1018:
   837                           
   838                           ;display.c: 42:             PORTB = 0x80;
   839  07C2  3080               	movlw	128
   840  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   841  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   842  07C5  0086               	movwf	6	;volatile
   843                           
   844                           ;display.c: 43:             break;
   845  07C6  2FF4               	goto	l121
   846  07C7                     l1020:
   847                           
   848                           ;display.c: 45:             PORTB = 0x90;
   849  07C7  3090               	movlw	144
   850  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   851  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   852  07CA  0086               	movwf	6	;volatile
   853                           
   854                           ;display.c: 46:             break;
   855  07CB  2FF4               	goto	l121
   856  07CC                     l1024:
   857  07CC  0872               	movf	set_disp_digit_value@value,w
   858  07CD  00F0               	movwf	??_set_disp_digit_value
   859  07CE  01F1               	clrf	??_set_disp_digit_value+1
   860                           
   861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   862                           ; Switch size 1, requested type "simple"
   863                           ; Number of cases is 1, Range of values is 0 to 0
   864                           ; switch strategies available:
   865                           ; Name         Instructions Cycles
   866                           ; simple_byte            4     3 (average)
   867                           ; direct_byte            7     6 (fixed)
   868                           ; jumptable            260     6 (fixed)
   869                           ;	Chosen strategy is simple_byte
   870  07CF  0871               	movf	??_set_disp_digit_value+1,w
   871  07D0  3A00               	xorlw	0	; case 0
   872  07D1  1903               	skipnz
   873  07D2  2FD4               	goto	l1126
   874  07D3  2FF4               	goto	l121
   875  07D4                     l1126:
   876                           
   877                           ; Switch size 1, requested type "simple"
   878                           ; Number of cases is 10, Range of values is 0 to 9
   879                           ; switch strategies available:
   880                           ; Name         Instructions Cycles
   881                           ; direct_byte           16     6 (fixed)
   882                           ; simple_byte           31    16 (average)
   883                           ; jumptable            260     6 (fixed)
   884                           ;	Chosen strategy is simple_byte
   885  07D4  0870               	movf	??_set_disp_digit_value,w
   886  07D5  3A00               	xorlw	0	; case 0
   887  07D6  1903               	skipnz
   888  07D7  2F9A               	goto	l1002
   889  07D8  3A01               	xorlw	1	; case 1
   890  07D9  1903               	skipnz
   891  07DA  2F9F               	goto	l1004
   892  07DB  3A03               	xorlw	3	; case 2
   893  07DC  1903               	skipnz
   894  07DD  2FA4               	goto	l1006
   895  07DE  3A01               	xorlw	1	; case 3
   896  07DF  1903               	skipnz
   897  07E0  2FA9               	goto	l1008
   898  07E1  3A07               	xorlw	7	; case 4
   899  07E2  1903               	skipnz
   900  07E3  2FAE               	goto	l1010
   901  07E4  3A01               	xorlw	1	; case 5
   902  07E5  1903               	skipnz
   903  07E6  2FB3               	goto	l1012
   904  07E7  3A03               	xorlw	3	; case 6
   905  07E8  1903               	skipnz
   906  07E9  2FB8               	goto	l1014
   907  07EA  3A01               	xorlw	1	; case 7
   908  07EB  1903               	skipnz
   909  07EC  2FBD               	goto	l1016
   910  07ED  3A0F               	xorlw	15	; case 8
   911  07EE  1903               	skipnz
   912  07EF  2FC2               	goto	l1018
   913  07F0  3A01               	xorlw	1	; case 9
   914  07F1  1903               	skipnz
   915  07F2  2FC7               	goto	l1020
   916  07F3  2FF4               	goto	l121
   917  07F4                     l121:
   918  07F4  0008               	return
   919  07F5                     __end_of_set_disp_digit_value:
   920                           
   921                           	psect	text4
   922  0747                     __ptext4:	
   923 ;; *************** function _format_time *****************
   924 ;; Defined at:
   925 ;;		line 33 in file "stopwatch.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  cashed_time     2    1[BANK0 ] unsigned int 
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0, pclath, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   939 ;;      Params:         0       0       0       0
   940 ;;      Locals:         0       2       0       0
   941 ;;      Temps:          0       1       0       0
   942 ;;      Totals:         0       3       0       0
   943 ;;Total ram usage:        3 bytes
   944 ;; Hardware stack levels used: 1
   945 ;; Hardware stack levels required when called: 1
   946 ;; This function calls:
   947 ;;		___lwdiv
   948 ;;		___lwmod
   949 ;; This function is called by:
   950 ;;		_update_disp
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           
   955                           ;psect for function _format_time
   956  0747                     _format_time:
   957  0747                     l998:	
   958                           ;incstack = 0
   959                           ; Regs used in _format_time: [wreg+status,2+status,0+pclath+cstack]
   960                           
   961                           
   962                           ;stopwatch.c: 35:     formatted_time.ms = time_ms / 100 % 10;
   963  0747  300A               	movlw	10
   964  0748  00F8               	movwf	___lwmod@divisor
   965  0749  3000               	movlw	0
   966  074A  00F9               	movwf	___lwmod@divisor+1
   967  074B  3064               	movlw	100
   968  074C  00F0               	movwf	___lwdiv@divisor
   969  074D  3000               	movlw	0
   970  074E  00F1               	movwf	___lwdiv@divisor+1
   971  074F  1283               	bcf	3,5	;RP0=0, select bank0
   972  0750  1303               	bcf	3,6	;RP1=0, select bank0
   973  0751  0824               	movf	_time_ms+1,w
   974  0752  00F3               	movwf	___lwdiv@dividend+1
   975  0753  0823               	movf	_time_ms,w
   976  0754  00F2               	movwf	___lwdiv@dividend
   977  0755  2703               	fcall	___lwdiv
   978  0756  0871               	movf	?___lwdiv+1,w
   979  0757  00FB               	movwf	___lwmod@dividend+1
   980  0758  0870               	movf	?___lwdiv,w
   981  0759  00FA               	movwf	___lwmod@dividend
   982  075A  268A               	fcall	___lwmod
   983  075B  0878               	movf	?___lwmod,w
   984  075C  1283               	bcf	3,5	;RP0=0, select bank0
   985  075D  1303               	bcf	3,6	;RP1=0, select bank0
   986  075E  00A7               	movwf	??_format_time
   987  075F  0827               	movf	??_format_time,w
   988  0760  00A0               	movwf	_formatted_time
   989                           
   990                           ;stopwatch.c: 36:     unsigned int cashed_time = time_ms / 1000 % 60;
   991  0761  303C               	movlw	60
   992  0762  00F8               	movwf	___lwmod@divisor
   993  0763  3000               	movlw	0
   994  0764  00F9               	movwf	___lwmod@divisor+1
   995  0765  30E8               	movlw	232
   996  0766  00F0               	movwf	___lwdiv@divisor
   997  0767  3003               	movlw	3
   998  0768  00F1               	movwf	___lwdiv@divisor+1
   999  0769  0824               	movf	_time_ms+1,w
  1000  076A  00F3               	movwf	___lwdiv@dividend+1
  1001  076B  0823               	movf	_time_ms,w
  1002  076C  00F2               	movwf	___lwdiv@dividend
  1003  076D  2703               	fcall	___lwdiv
  1004  076E  0871               	movf	?___lwdiv+1,w
  1005  076F  00FB               	movwf	___lwmod@dividend+1
  1006  0770  0870               	movf	?___lwdiv,w
  1007  0771  00FA               	movwf	___lwmod@dividend
  1008  0772  268A               	fcall	___lwmod
  1009  0773  0879               	movf	?___lwmod+1,w
  1010  0774  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0775  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0776  00A9               	movwf	format_time@cashed_time+1
  1013  0777  0878               	movf	?___lwmod,w
  1014  0778  00A8               	movwf	format_time@cashed_time
  1015                           
  1016                           ;stopwatch.c: 37:     formatted_time.sec_1_digit = cashed_time % 10;
  1017  0779  300A               	movlw	10
  1018  077A  00F8               	movwf	___lwmod@divisor
  1019  077B  3000               	movlw	0
  1020  077C  00F9               	movwf	___lwmod@divisor+1
  1021  077D  0829               	movf	format_time@cashed_time+1,w
  1022  077E  00FB               	movwf	___lwmod@dividend+1
  1023  077F  0828               	movf	format_time@cashed_time,w
  1024  0780  00FA               	movwf	___lwmod@dividend
  1025  0781  268A               	fcall	___lwmod
  1026  0782  0878               	movf	?___lwmod,w
  1027  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1028  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1029  0785  00A7               	movwf	??_format_time
  1030  0786  0827               	movf	??_format_time,w
  1031  0787  00A1               	movwf	_formatted_time+1
  1032                           
  1033                           ;stopwatch.c: 38:     formatted_time.sec_2_digit = (char)(cashed_time / 10);
  1034  0788  300A               	movlw	10
  1035  0789  00F0               	movwf	___lwdiv@divisor
  1036  078A  3000               	movlw	0
  1037  078B  00F1               	movwf	___lwdiv@divisor+1
  1038  078C  0829               	movf	format_time@cashed_time+1,w
  1039  078D  00F3               	movwf	___lwdiv@dividend+1
  1040  078E  0828               	movf	format_time@cashed_time,w
  1041  078F  00F2               	movwf	___lwdiv@dividend
  1042  0790  2703               	fcall	___lwdiv
  1043  0791  0870               	movf	?___lwdiv,w
  1044  0792  1283               	bcf	3,5	;RP0=0, select bank0
  1045  0793  1303               	bcf	3,6	;RP1=0, select bank0
  1046  0794  00A7               	movwf	??_format_time
  1047  0795  0827               	movf	??_format_time,w
  1048  0796  00A2               	movwf	_formatted_time+2
  1049  0797                     l90:
  1050  0797  0008               	return
  1051  0798                     __end_of_format_time:
  1052                           
  1053                           	psect	text5
  1054  068A                     __ptext5:	
  1055 ;; *************** function ___lwmod *****************
  1056 ;; Defined at:
  1057 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  divisor         2    8[COMMON] unsigned int 
  1060 ;;  dividend        2   10[COMMON] unsigned int 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  counter         1   13[COMMON] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  2    8[COMMON] unsigned int 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1072 ;;      Params:         4       0       0       0
  1073 ;;      Locals:         1       0       0       0
  1074 ;;      Temps:          1       0       0       0
  1075 ;;      Totals:         6       0       0       0
  1076 ;;Total ram usage:        6 bytes
  1077 ;; Hardware stack levels used: 1
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_format_time
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function ___lwmod
  1087  068A                     ___lwmod:
  1088  068A                     l968:	
  1089                           ;incstack = 0
  1090                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1091                           
  1092  068A  0878               	movf	___lwmod@divisor,w
  1093  068B  0479               	iorwf	___lwmod@divisor+1,w
  1094  068C  1903               	btfsc	3,2
  1095  068D  2E8F               	goto	u331
  1096  068E  2E90               	goto	u330
  1097  068F                     u331:
  1098  068F  2EBF               	goto	l986
  1099  0690                     u330:
  1100  0690                     l970:
  1101  0690  01FD               	clrf	___lwmod@counter
  1102  0691  0AFD               	incf	___lwmod@counter,f
  1103  0692  2E9E               	goto	l976
  1104  0693                     l972:
  1105  0693  3001               	movlw	1
  1106  0694                     u345:
  1107  0694  1003               	clrc
  1108  0695  0DF8               	rlf	___lwmod@divisor,f
  1109  0696  0DF9               	rlf	___lwmod@divisor+1,f
  1110  0697  3EFF               	addlw	-1
  1111  0698  1D03               	skipz
  1112  0699  2E94               	goto	u345
  1113  069A                     l974:
  1114  069A  3001               	movlw	1
  1115  069B  00FC               	movwf	??___lwmod
  1116  069C  087C               	movf	??___lwmod,w
  1117  069D  07FD               	addwf	___lwmod@counter,f
  1118  069E                     l976:
  1119  069E  1FF9               	btfss	___lwmod@divisor+1,7
  1120  069F  2EA1               	goto	u351
  1121  06A0  2EA2               	goto	u350
  1122  06A1                     u351:
  1123  06A1  2E93               	goto	l972
  1124  06A2                     u350:
  1125  06A2                     l978:
  1126  06A2  0879               	movf	___lwmod@divisor+1,w
  1127  06A3  027B               	subwf	___lwmod@dividend+1,w
  1128  06A4  1D03               	skipz
  1129  06A5  2EA8               	goto	u365
  1130  06A6  0878               	movf	___lwmod@divisor,w
  1131  06A7  027A               	subwf	___lwmod@dividend,w
  1132  06A8                     u365:
  1133  06A8  1C03               	skipc
  1134  06A9  2EAB               	goto	u361
  1135  06AA  2EAC               	goto	u360
  1136  06AB                     u361:
  1137  06AB  2EB2               	goto	l982
  1138  06AC                     u360:
  1139  06AC                     l980:
  1140  06AC  0878               	movf	___lwmod@divisor,w
  1141  06AD  02FA               	subwf	___lwmod@dividend,f
  1142  06AE  0879               	movf	___lwmod@divisor+1,w
  1143  06AF  1C03               	skipc
  1144  06B0  03FB               	decf	___lwmod@dividend+1,f
  1145  06B1  02FB               	subwf	___lwmod@dividend+1,f
  1146  06B2                     l982:
  1147  06B2  3001               	movlw	1
  1148  06B3                     u375:
  1149  06B3  1003               	clrc
  1150  06B4  0CF9               	rrf	___lwmod@divisor+1,f
  1151  06B5  0CF8               	rrf	___lwmod@divisor,f
  1152  06B6  3EFF               	addlw	-1
  1153  06B7  1D03               	skipz
  1154  06B8  2EB3               	goto	u375
  1155  06B9                     l984:
  1156  06B9  3001               	movlw	1
  1157  06BA  02FD               	subwf	___lwmod@counter,f
  1158  06BB  1D03               	btfss	3,2
  1159  06BC  2EBE               	goto	u381
  1160  06BD  2EBF               	goto	u380
  1161  06BE                     u381:
  1162  06BE  2EA2               	goto	l978
  1163  06BF                     u380:
  1164  06BF                     l986:
  1165  06BF  087B               	movf	___lwmod@dividend+1,w
  1166  06C0  00F9               	movwf	?___lwmod+1
  1167  06C1  087A               	movf	___lwmod@dividend,w
  1168  06C2  00F8               	movwf	?___lwmod
  1169  06C3                     l492:
  1170  06C3  0008               	return
  1171  06C4                     __end_of___lwmod:
  1172                           
  1173                           	psect	text6
  1174  0703                     __ptext6:	
  1175 ;; *************** function ___lwdiv *****************
  1176 ;; Defined at:
  1177 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  divisor         2    0[COMMON] unsigned int 
  1180 ;;  dividend        2    2[COMMON] unsigned int 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  quotient        2    5[COMMON] unsigned int 
  1183 ;;  counter         1    7[COMMON] unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  2    0[COMMON] unsigned int 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1193 ;;      Params:         4       0       0       0
  1194 ;;      Locals:         3       0       0       0
  1195 ;;      Temps:          1       0       0       0
  1196 ;;      Totals:         8       0       0       0
  1197 ;;Total ram usage:        8 bytes
  1198 ;; Hardware stack levels used: 1
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_format_time
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           
  1207                           ;psect for function ___lwdiv
  1208  0703                     ___lwdiv:
  1209  0703                     l942:	
  1210                           ;incstack = 0
  1211                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1212                           
  1213  0703  01F5               	clrf	___lwdiv@quotient
  1214  0704  01F6               	clrf	___lwdiv@quotient+1
  1215  0705                     l944:
  1216  0705  0870               	movf	___lwdiv@divisor,w
  1217  0706  0471               	iorwf	___lwdiv@divisor+1,w
  1218  0707  1903               	btfsc	3,2
  1219  0708  2F0A               	goto	u261
  1220  0709  2F0B               	goto	u260
  1221  070A                     u261:
  1222  070A  2F42               	goto	l964
  1223  070B                     u260:
  1224  070B                     l946:
  1225  070B  01F7               	clrf	___lwdiv@counter
  1226  070C  0AF7               	incf	___lwdiv@counter,f
  1227  070D  2F19               	goto	l952
  1228  070E                     l948:
  1229  070E  3001               	movlw	1
  1230  070F                     u275:
  1231  070F  1003               	clrc
  1232  0710  0DF0               	rlf	___lwdiv@divisor,f
  1233  0711  0DF1               	rlf	___lwdiv@divisor+1,f
  1234  0712  3EFF               	addlw	-1
  1235  0713  1D03               	skipz
  1236  0714  2F0F               	goto	u275
  1237  0715                     l950:
  1238  0715  3001               	movlw	1
  1239  0716  00F4               	movwf	??___lwdiv
  1240  0717  0874               	movf	??___lwdiv,w
  1241  0718  07F7               	addwf	___lwdiv@counter,f
  1242  0719                     l952:
  1243  0719  1FF1               	btfss	___lwdiv@divisor+1,7
  1244  071A  2F1C               	goto	u281
  1245  071B  2F1D               	goto	u280
  1246  071C                     u281:
  1247  071C  2F0E               	goto	l948
  1248  071D                     u280:
  1249  071D                     l954:
  1250  071D  3001               	movlw	1
  1251  071E                     u295:
  1252  071E  1003               	clrc
  1253  071F  0DF5               	rlf	___lwdiv@quotient,f
  1254  0720  0DF6               	rlf	___lwdiv@quotient+1,f
  1255  0721  3EFF               	addlw	-1
  1256  0722  1D03               	skipz
  1257  0723  2F1E               	goto	u295
  1258  0724  0871               	movf	___lwdiv@divisor+1,w
  1259  0725  0273               	subwf	___lwdiv@dividend+1,w
  1260  0726  1D03               	skipz
  1261  0727  2F2A               	goto	u305
  1262  0728  0870               	movf	___lwdiv@divisor,w
  1263  0729  0272               	subwf	___lwdiv@dividend,w
  1264  072A                     u305:
  1265  072A  1C03               	skipc
  1266  072B  2F2D               	goto	u301
  1267  072C  2F2E               	goto	u300
  1268  072D                     u301:
  1269  072D  2F35               	goto	l960
  1270  072E                     u300:
  1271  072E                     l956:
  1272  072E  0870               	movf	___lwdiv@divisor,w
  1273  072F  02F2               	subwf	___lwdiv@dividend,f
  1274  0730  0871               	movf	___lwdiv@divisor+1,w
  1275  0731  1C03               	skipc
  1276  0732  03F3               	decf	___lwdiv@dividend+1,f
  1277  0733  02F3               	subwf	___lwdiv@dividend+1,f
  1278  0734                     l958:
  1279  0734  1475               	bsf	___lwdiv@quotient,0
  1280  0735                     l960:
  1281  0735  3001               	movlw	1
  1282  0736                     u315:
  1283  0736  1003               	clrc
  1284  0737  0CF1               	rrf	___lwdiv@divisor+1,f
  1285  0738  0CF0               	rrf	___lwdiv@divisor,f
  1286  0739  3EFF               	addlw	-1
  1287  073A  1D03               	skipz
  1288  073B  2F36               	goto	u315
  1289  073C                     l962:
  1290  073C  3001               	movlw	1
  1291  073D  02F7               	subwf	___lwdiv@counter,f
  1292  073E  1D03               	btfss	3,2
  1293  073F  2F41               	goto	u321
  1294  0740  2F42               	goto	u320
  1295  0741                     u321:
  1296  0741  2F1D               	goto	l954
  1297  0742                     u320:
  1298  0742                     l964:
  1299  0742  0876               	movf	___lwdiv@quotient+1,w
  1300  0743  00F1               	movwf	?___lwdiv+1
  1301  0744  0875               	movf	___lwdiv@quotient,w
  1302  0745  00F0               	movwf	?___lwdiv
  1303  0746                     l482:
  1304  0746  0008               	return
  1305  0747                     __end_of___lwdiv:
  1306                           
  1307                           	psect	text7
  1308  05F2                     __ptext7:	
  1309 ;; *************** function _handle_btn_pressing *****************
  1310 ;; Defined at:
  1311 ;;		line 33 in file "buttons.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  btn             1    wreg     enum E469
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  btn             1    2[COMMON] enum E469
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1325 ;;      Params:         0       0       0       0
  1326 ;;      Locals:         1       0       0       0
  1327 ;;      Temps:          2       0       0       0
  1328 ;;      Totals:         3       0       0       0
  1329 ;;Total ram usage:        3 bytes
  1330 ;; Hardware stack levels used: 1
  1331 ;; Hardware stack levels required when called: 1
  1332 ;; This function calls:
  1333 ;;		_reset_stopwatch
  1334 ;;		_start_stopwatch
  1335 ;;		_stop_stopwatch
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _handle_btn_pressing
  1343  05F2                     _handle_btn_pressing:
  1344                           
  1345                           ;incstack = 0
  1346                           ; Regs used in _handle_btn_pressing: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1347                           ;handle_btn_pressing@btn stored from wreg
  1348  05F2  00F2               	movwf	handle_btn_pressing@btn
  1349  05F3                     l1056:
  1350                           
  1351                           ;buttons.c: 33: void handle_btn_pressing(enum Button btn);buttons.c: 34: {;buttons.c: 35
      +                          :     switch(btn)
  1352  05F3  2DFA               	goto	l1066
  1353  05F4                     l1058:
  1354                           
  1355                           ;buttons.c: 38:             reset_stopwatch();
  1356  05F4  25D3               	fcall	_reset_stopwatch
  1357                           
  1358                           ;buttons.c: 39:             break;
  1359  05F5  2E0D               	goto	l70
  1360  05F6                     l1060:
  1361                           
  1362                           ;buttons.c: 41:             stop_stopwatch();
  1363  05F6  25CA               	fcall	_stop_stopwatch
  1364                           
  1365                           ;buttons.c: 42:             break;
  1366  05F7  2E0D               	goto	l70
  1367  05F8                     l1062:
  1368                           
  1369                           ;buttons.c: 44:             start_stopwatch();
  1370  05F8  25CE               	fcall	_start_stopwatch
  1371                           
  1372                           ;buttons.c: 45:             break;
  1373  05F9  2E0D               	goto	l70
  1374  05FA                     l1066:
  1375  05FA  0872               	movf	handle_btn_pressing@btn,w
  1376  05FB  00F0               	movwf	??_handle_btn_pressing
  1377  05FC  01F1               	clrf	??_handle_btn_pressing+1
  1378                           
  1379                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1380                           ; Switch size 1, requested type "simple"
  1381                           ; Number of cases is 1, Range of values is 0 to 0
  1382                           ; switch strategies available:
  1383                           ; Name         Instructions Cycles
  1384                           ; simple_byte            4     3 (average)
  1385                           ; direct_byte            7     6 (fixed)
  1386                           ; jumptable            260     6 (fixed)
  1387                           ;	Chosen strategy is simple_byte
  1388  05FD  0871               	movf	??_handle_btn_pressing+1,w
  1389  05FE  3A00               	xorlw	0	; case 0
  1390  05FF  1903               	skipnz
  1391  0600  2E02               	goto	l1128
  1392  0601  2E0D               	goto	l70
  1393  0602                     l1128:
  1394                           
  1395                           ; Switch size 1, requested type "simple"
  1396                           ; Number of cases is 3, Range of values is 1 to 3
  1397                           ; switch strategies available:
  1398                           ; Name         Instructions Cycles
  1399                           ; simple_byte           10     6 (average)
  1400                           ; direct_byte           12     9 (fixed)
  1401                           ; jumptable            263     9 (fixed)
  1402                           ;	Chosen strategy is simple_byte
  1403  0602  0870               	movf	??_handle_btn_pressing,w
  1404  0603  3A01               	xorlw	1	; case 1
  1405  0604  1903               	skipnz
  1406  0605  2DF4               	goto	l1058
  1407  0606  3A03               	xorlw	3	; case 2
  1408  0607  1903               	skipnz
  1409  0608  2DF6               	goto	l1060
  1410  0609  3A01               	xorlw	1	; case 3
  1411  060A  1903               	skipnz
  1412  060B  2DF8               	goto	l1062
  1413  060C  2E0D               	goto	l70
  1414  060D                     l70:
  1415  060D  0008               	return
  1416  060E                     __end_of_handle_btn_pressing:
  1417                           
  1418                           	psect	text8
  1419  05CA                     __ptext8:	
  1420 ;; *************** function _stop_stopwatch *****************
  1421 ;; Defined at:
  1422 ;;		line 21 in file "stopwatch.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		status,2
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1436 ;;      Params:         0       0       0       0
  1437 ;;      Locals:         0       0       0       0
  1438 ;;      Temps:          0       0       0       0
  1439 ;;      Totals:         0       0       0       0
  1440 ;;Total ram usage:        0 bytes
  1441 ;; Hardware stack levels used: 1
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_handle_btn_pressing
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           
  1450                           ;psect for function _stop_stopwatch
  1451  05CA                     _stop_stopwatch:
  1452  05CA                     l994:	
  1453                           ;incstack = 0
  1454                           ; Regs used in _stop_stopwatch: [status,2]
  1455                           
  1456                           
  1457                           ;stopwatch.c: 23:     is_timer_work = 0;
  1458  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1459  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1460  05CC  01A5               	clrf	_is_timer_work
  1461  05CD                     l84:
  1462  05CD  0008               	return
  1463  05CE                     __end_of_stop_stopwatch:
  1464                           
  1465                           	psect	text9
  1466  05CE                     __ptext9:	
  1467 ;; *************** function _start_stopwatch *****************
  1468 ;; Defined at:
  1469 ;;		line 27 in file "stopwatch.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		None
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1483 ;;      Params:         0       0       0       0
  1484 ;;      Locals:         0       0       0       0
  1485 ;;      Temps:          0       0       0       0
  1486 ;;      Totals:         0       0       0       0
  1487 ;;Total ram usage:        0 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_handle_btn_pressing
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _start_stopwatch
  1498  05CE                     _start_stopwatch:
  1499  05CE                     l996:	
  1500                           ;incstack = 0
  1501                           ; Regs used in _start_stopwatch: []
  1502                           
  1503                           
  1504                           ;stopwatch.c: 29:     is_timer_work = 1;
  1505  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1506  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1507  05D0  01A5               	clrf	_is_timer_work
  1508  05D1  0AA5               	incf	_is_timer_work,f
  1509  05D2                     l87:
  1510  05D2  0008               	return
  1511  05D3                     __end_of_start_stopwatch:
  1512                           
  1513                           	psect	text10
  1514  05D3                     __ptext10:	
  1515 ;; *************** function _reset_stopwatch *****************
  1516 ;; Defined at:
  1517 ;;		line 14 in file "stopwatch.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;		None
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1531 ;;      Params:         0       0       0       0
  1532 ;;      Locals:         0       0       0       0
  1533 ;;      Temps:          0       0       0       0
  1534 ;;      Totals:         0       0       0       0
  1535 ;;Total ram usage:        0 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;;		_handle_btn_pressing
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           
  1546                           ;psect for function _reset_stopwatch
  1547  05D3                     _reset_stopwatch:
  1548  05D3                     l990:	
  1549                           ;incstack = 0
  1550                           ; Regs used in _reset_stopwatch: [wreg+status,2]
  1551                           
  1552                           
  1553                           ;stopwatch.c: 16:     is_timer_work = 0;
  1554  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1555  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1556  05D5  01A5               	clrf	_is_timer_work
  1557  05D6                     l992:
  1558                           
  1559                           ;stopwatch.c: 17:     PORTB = 0xC0;
  1560  05D6  30C0               	movlw	192
  1561  05D7  0086               	movwf	6	;volatile
  1562  05D8                     l81:
  1563  05D8  0008               	return
  1564  05D9                     __end_of_reset_stopwatch:
  1565                           
  1566                           	psect	text11
  1567  06C4                     __ptext11:	
  1568 ;; *************** function _get_btn_pressed *****************
  1569 ;; Defined at:
  1570 ;;		line 18 in file "buttons.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  btn             1    4[COMMON] enum E469
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      enum E469
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1584 ;;      Params:         0       0       0       0
  1585 ;;      Locals:         1       0       0       0
  1586 ;;      Temps:          1       0       0       0
  1587 ;;      Totals:         2       0       0       0
  1588 ;;Total ram usage:        2 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 1
  1591 ;; This function calls:
  1592 ;;		_is_btn_bounce
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           
  1599                           ;psect for function _get_btn_pressed
  1600  06C4                     _get_btn_pressed:
  1601  06C4                     l854:	
  1602                           ;incstack = 0
  1603                           ; Regs used in _get_btn_pressed: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1604                           
  1605                           
  1606                           ;buttons.c: 20:     enum Button btn = NONE;
  1607  06C4  01F4               	clrf	get_btn_pressed@btn
  1608  06C5                     l856:
  1609                           
  1610                           ;buttons.c: 22:     if (PORTAbits.RA7 == 0 && !is_btn_bounce(PORTAbits.RA7))
  1611  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  1612  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  1613  06C7  1B85               	btfsc	5,7	;volatile
  1614  06C8  2ECA               	goto	u181
  1615  06C9  2ECB               	goto	u180
  1616  06CA                     u181:
  1617  06CA  2ED7               	goto	l56
  1618  06CB                     u180:
  1619  06CB                     l858:
  1620  06CB  0D05               	rlf	5,w	;volatile
  1621  06CC  0D05               	rlf	5,w	;volatile
  1622  06CD  3901               	andlw	1
  1623  06CE  262B               	fcall	_is_btn_bounce
  1624  06CF  3A00               	xorlw	0
  1625  06D0  1D03               	skipz
  1626  06D1  2ED3               	goto	u191
  1627  06D2  2ED4               	goto	u190
  1628  06D3                     u191:
  1629  06D3  2ED7               	goto	l56
  1630  06D4                     u190:
  1631  06D4                     l860:
  1632                           
  1633                           ;buttons.c: 23:         btn = RESET;
  1634  06D4  01F4               	clrf	get_btn_pressed@btn
  1635  06D5  0AF4               	incf	get_btn_pressed@btn,f
  1636  06D6  2F01               	goto	l57
  1637  06D7                     l56:	
  1638                           ;buttons.c: 24:     else if (PORTAbits.RA6 == 0 && !is_btn_bounce(PORTAbits.RA6))
  1639                           
  1640  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1641  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1642  06D9  1B05               	btfsc	5,6	;volatile
  1643  06DA  2EDC               	goto	u201
  1644  06DB  2EDD               	goto	u200
  1645  06DC                     u201:
  1646  06DC  2EED               	goto	l58
  1647  06DD                     u200:
  1648  06DD                     l862:
  1649  06DD  0E05               	swapf	5,w	;volatile
  1650  06DE  00F3               	movwf	??_get_btn_pressed
  1651  06DF  0CF3               	rrf	??_get_btn_pressed,f
  1652  06E0  0C73               	rrf	??_get_btn_pressed,w
  1653  06E1  3901               	andlw	1
  1654  06E2  262B               	fcall	_is_btn_bounce
  1655  06E3  3A00               	xorlw	0
  1656  06E4  1D03               	skipz
  1657  06E5  2EE7               	goto	u211
  1658  06E6  2EE8               	goto	u210
  1659  06E7                     u211:
  1660  06E7  2EED               	goto	l58
  1661  06E8                     u210:
  1662  06E8                     l864:
  1663                           
  1664                           ;buttons.c: 25:         btn = STOP;
  1665  06E8  3002               	movlw	2
  1666  06E9  00F3               	movwf	??_get_btn_pressed
  1667  06EA  0873               	movf	??_get_btn_pressed,w
  1668  06EB  00F4               	movwf	get_btn_pressed@btn
  1669  06EC  2F01               	goto	l57
  1670  06ED                     l58:	
  1671                           ;buttons.c: 26:     else if (PORTAbits.RA5 == 0 && !is_btn_bounce(PORTAbits.RA5))
  1672                           
  1673  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  1674  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  1675  06EF  1A85               	btfsc	5,5	;volatile
  1676  06F0  2EF2               	goto	u221
  1677  06F1  2EF3               	goto	u220
  1678  06F2                     u221:
  1679  06F2  2F01               	goto	l57
  1680  06F3                     u220:
  1681  06F3                     l866:
  1682  06F3  0E05               	swapf	5,w	;volatile
  1683  06F4  00F3               	movwf	??_get_btn_pressed
  1684  06F5  0C73               	rrf	??_get_btn_pressed,w
  1685  06F6  3901               	andlw	1
  1686  06F7  262B               	fcall	_is_btn_bounce
  1687  06F8  3A00               	xorlw	0
  1688  06F9  1D03               	skipz
  1689  06FA  2EFC               	goto	u231
  1690  06FB  2EFD               	goto	u230
  1691  06FC                     u231:
  1692  06FC  2F01               	goto	l57
  1693  06FD                     u230:
  1694  06FD                     l868:
  1695                           
  1696                           ;buttons.c: 27:         btn = START;
  1697  06FD  3003               	movlw	3
  1698  06FE  00F3               	movwf	??_get_btn_pressed
  1699  06FF  0873               	movf	??_get_btn_pressed,w
  1700  0700  00F4               	movwf	get_btn_pressed@btn
  1701  0701                     l57:
  1702                           
  1703                           ;buttons.c: 29:     return btn;
  1704  0701  0874               	movf	get_btn_pressed@btn,w
  1705  0702                     l61:
  1706  0702  0008               	return
  1707  0703                     __end_of_get_btn_pressed:
  1708                           
  1709                           	psect	text12
  1710  062B                     __ptext12:	
  1711 ;; *************** function _is_btn_bounce *****************
  1712 ;; Defined at:
  1713 ;;		line 8 in file "buttons.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  btn             1    wreg     unsigned char 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  btn             1    0[COMMON] unsigned char 
  1718 ;;  i               2    1[COMMON] int 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      unsigned char 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, btemp+1
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1728 ;;      Params:         0       0       0       0
  1729 ;;      Locals:         3       0       0       0
  1730 ;;      Temps:          0       0       0       0
  1731 ;;      Totals:         3       0       0       0
  1732 ;;Total ram usage:        3 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_get_btn_pressed
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function _is_btn_bounce
  1743  062B                     _is_btn_bounce:
  1744                           
  1745                           ;incstack = 0
  1746                           ; Regs used in _is_btn_bounce: [wreg+status,2+status,0+btemp+1]
  1747                           ;is_btn_bounce@btn stored from wreg
  1748  062B  00F0               	movwf	is_btn_bounce@btn
  1749  062C                     l768:
  1750                           
  1751                           ;buttons.c: 8: char is_btn_bounce(char btn);buttons.c: 9: {;buttons.c: 10:     int i = 0
      +                          ;
  1752  062C  01F1               	clrf	is_btn_bounce@i
  1753  062D  01F2               	clrf	is_btn_bounce@i+1
  1754                           
  1755                           ;buttons.c: 11:     while(i < 400 && btn == 0)
  1756  062E  2E35               	goto	l772
  1757  062F                     l770:
  1758                           
  1759                           ;buttons.c: 12:         i++;
  1760  062F  3001               	movlw	1
  1761  0630  07F1               	addwf	is_btn_bounce@i,f
  1762  0631  1803               	skipnc
  1763  0632  0AF2               	incf	is_btn_bounce@i+1,f
  1764  0633  3000               	movlw	0
  1765  0634  07F2               	addwf	is_btn_bounce@i+1,f
  1766  0635                     l772:
  1767                           
  1768                           ;buttons.c: 11:     while(i < 400 && btn == 0)
  1769  0635  0872               	movf	is_btn_bounce@i+1,w
  1770  0636  3A80               	xorlw	128
  1771  0637  00FF               	movwf	btemp+1
  1772  0638  3081               	movlw	129
  1773  0639  027F               	subwf	btemp+1,w
  1774  063A  1D03               	skipz
  1775  063B  2E3E               	goto	u145
  1776  063C  3090               	movlw	144
  1777  063D  0271               	subwf	is_btn_bounce@i,w
  1778  063E                     u145:
  1779  063E  1803               	skipnc
  1780  063F  2E41               	goto	u141
  1781  0640  2E42               	goto	u140
  1782  0641                     u141:
  1783  0641  2E47               	goto	l776
  1784  0642                     u140:
  1785  0642                     l774:
  1786  0642  0870               	movf	is_btn_bounce@btn,w
  1787  0643  1903               	btfsc	3,2
  1788  0644  2E46               	goto	u151
  1789  0645  2E47               	goto	u150
  1790  0646                     u151:
  1791  0646  2E2F               	goto	l770
  1792  0647                     u150:
  1793  0647                     l776:
  1794                           
  1795                           ;buttons.c: 14:     return i == 400 ? 0 : 1;
  1796  0647  3090               	movlw	144
  1797  0648  0671               	xorwf	is_btn_bounce@i,w
  1798  0649  1D03               	skipz
  1799  064A  2E4F               	goto	u161
  1800  064B  0372               	decf	is_btn_bounce@i+1,w
  1801  064C  1D03               	btfss	3,2
  1802  064D  2E4F               	goto	u161
  1803  064E  2E51               	goto	u160
  1804  064F                     u161:
  1805  064F  3001               	movlw	1
  1806  0650  2E52               	goto	u170
  1807  0651                     u160:
  1808  0651  3000               	movlw	0
  1809  0652                     u170:
  1810  0652                     l53:
  1811  0652  0008               	return
  1812  0653                     __end_of_is_btn_bounce:
  1813                           
  1814                           	psect	text13
  1815  05E1                     __ptext13:	
  1816 ;; *************** function _configure *****************
  1817 ;; Defined at:
  1818 ;;		line 18 in file "main.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1832 ;;      Params:         0       0       0       0
  1833 ;;      Locals:         0       0       0       0
  1834 ;;      Temps:          1       0       0       0
  1835 ;;      Totals:         1       0       0       0
  1836 ;;Total ram usage:        1 bytes
  1837 ;; Hardware stack levels used: 1
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_main
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           
  1846                           ;psect for function _configure
  1847  05E1                     _configure:
  1848  05E1                     l816:	
  1849                           ;incstack = 0
  1850                           ; Regs used in _configure: [wreg+status,2+status,0]
  1851                           
  1852                           
  1853                           ;main.c: 20: 
  1854  05E1  178B               	bsf	11,7	;volatile
  1855  05E2                     l818:
  1856                           
  1857                           ;main.c: 22:     {
  1858  05E2  3007               	movlw	7
  1859  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  1860  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  1861  05E5  009F               	movwf	31	;volatile
  1862                           
  1863                           ;main.c: 24:         handle_btn_pressing(get_btn_pressed());
  1864  05E6  30E0               	movlw	224
  1865  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  1866  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  1867  05E9  0085               	movwf	5	;volatile
  1868  05EA                     l820:
  1869                           
  1870                           ;main.c: 25:         update_time_counter();
  1871  05EA  0186               	clrf	6	;volatile
  1872  05EB                     l822:
  1873                           
  1874                           ;main.c: 27: 
  1875  05EB  1281               	bcf	1,5	;volatile
  1876  05EC                     l824:
  1877                           
  1878                           ;main.c: 28:     return;
  1879  05EC  1181               	bcf	1,3	;volatile
  1880  05ED                     l826:
  1881                           
  1882                           ;main.c: 29: }
  1883  05ED  3007               	movlw	7
  1884  05EE  00F0               	movwf	??_configure
  1885  05EF  0870               	movf	??_configure,w
  1886  05F0  0481               	iorwf	1,f	;volatile
  1887  05F1                     l27:
  1888  05F1  0008               	return
  1889  05F2                     __end_of_configure:
  1890  007E                     btemp	set	126	;btemp
  1891  007E                     wtemp0	set	126
  1892                           
  1893                           	psect	config
  1894                           
  1895                           ;Config register CONFIG @ 0x2007
  1896                           ;	Oscillator Selection bits
  1897                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  1898                           ;	Watchdog Timer Enable bit
  1899                           ;	WDTE = OFF, WDT disabled
  1900                           ;	Power-up Timer Enable bit
  1901                           ;	PWRTE = OFF, PWRT disabled
  1902                           ;	RA5/MCLR/VPP Pin Function Select bit
  1903                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
  1904                           ;	Brown-out Detect Enable bit
  1905                           ;	BOREN = OFF, BOD disabled
  1906                           ;	Low-Voltage Programming Enable bit
  1907                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1908                           ;	Data EE Memory Code Protection bit
  1909                           ;	CPD = OFF, Data memory code protection off
  1910                           ;	Flash Program Memory Code Protection bit
  1911                           ;	CP = OFF, Code protection off
  1912  2007                     	org	8199
  1913  2007  3F18               	dw	16152

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4      11
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _format_time->___lwmod
    ___lwmod->___lwdiv
    _get_btn_pressed->_is_btn_bounce

Critical Paths under _main in BANK0

    _main->_update_disp
    _update_disp->_format_time

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1382
                          _configure
                    _get_btn_pressed
                _handle_btn_pressing
                    _reset_stopwatch
                        _update_disp
                _update_time_counter
 ---------------------------------------------------------------------------------
 (1) _update_time_counter                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _update_disp                                          1     1      0    1300
                                              3 BANK0      1     1      0
                        _format_time
               _set_disp_digit_value
 ---------------------------------------------------------------------------------
 (2) _set_disp_digit_value                                 3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _format_time                                          3     3      0    1278
                                              0 BANK0      3     3      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _handle_btn_pressing                                  3     3      0      22
                                              0 COMMON     3     3      0
                    _reset_stopwatch
                    _start_stopwatch
                     _stop_stopwatch
 ---------------------------------------------------------------------------------
 (2) _stop_stopwatch                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_stopwatch                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _reset_stopwatch                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_btn_pressed                                      2     2      0      60
                                              3 COMMON     2     2      0
                      _is_btn_bounce
 ---------------------------------------------------------------------------------
 (2) _is_btn_bounce                                        3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configure                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configure
   _get_btn_pressed
     _is_btn_bounce
   _handle_btn_pressing
     _reset_stopwatch
     _start_stopwatch
     _stop_stopwatch
   _reset_stopwatch
   _update_disp
     _format_time
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _set_disp_digit_value
   _update_time_counter

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      4       B       3       13.8%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      19       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      19      10        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jun 18 15:34:37 2021

                  _update_disp 0653                             l27 05F1                             l53 0652  
                           l61 0702                             l70 060D                             l56 06D7  
                           l57 0701                             l81 05D8                             l58 06ED  
                           l90 0797                             l84 05CD                             l94 0624  
                           l87 05D2                             l95 062A                            l121 07F4  
                          l124 0689                            l482 0746                            l820 05EA  
                          l492 06C3                            l822 05EB                            l824 05EC  
                          l816 05E1                            l826 05ED                            l818 05E2  
                          l770 062F                            l772 0635                            l860 06D4  
                          l774 0642                            l862 06DD                            l854 06C4  
                          l950 0715                            l942 0703                            l776 0647  
                          l768 062C                            l864 06E8                            l856 06C5  
                          l960 0735                            l952 0719                            l944 0705  
                          l866 06F3                            l858 06CB                            l962 073C  
                          l954 071D                            l946 070B                            l970 0690  
                          l868 06FD                            l956 072E                            l948 070E  
                          l964 0742                            l980 06AC                            l972 0693  
                          l990 05D3                            l958 0734                            l982 06B2  
                          l974 069A                            l992 05D6                            l984 06B9  
                          l976 069E                            l968 068A                            l994 05CA  
                          l978 06A2                            l986 06BF                            l996 05CE  
                          l998 0747                            u200 06DD                            u201 06DC  
                          u210 06E8                            u211 06E7                            u140 0642  
                          u220 06F3                            u300 072E                            u141 0641  
                          u221 06F2                            u301 072D                            u150 0647  
                          u230 06FD                            u151 0646                            u231 06FC  
                          u160 0651                            u320 0742                            u400 061E  
                          u161 064F                            u145 063E                            u321 0741  
                          u305 072A                            u401 061D                            u170 0652  
                          u330 0690                            u315 0736                            u331 068F  
                          u180 06CB                            u260 070B                            u181 06CA  
                          u261 070A                            u190 06D4                            u350 06A2  
                          u191 06D3                            u351 06A1                            u280 071D  
                          u360 06AC                            u281 071C                            u361 06AB  
                          u345 0694                            u417 065F                            u275 070F  
                          u427 0670                            u380 06BF                            u381 06BE  
                          u365 06A8                            u437 0681                            u390 0615  
                          u295 071E                            u375 06B3                            u391 0614  
         ?_handle_btn_pressing 0070          ??_update_time_counter 0070                           l1000 0799  
                         l1010 07AE                           l1002 079A                           l1020 07C7  
                         l1012 07B3                           l1004 079F                           l1014 07B8  
                         l1006 07A4                           l1030 0653                           l1016 07BD  
                         l1008 07A9                           l1024 07CC                           l1040 0667  
                         l1032 0654                           l1018 07C2                           l1050 067A  
                         l1042 0669                           l1034 0658                           l1060 05F6  
                         l1052 067D                           l1044 066C                           l1036 065B  
                         l1062 05F8                           l1126 07D4                           l1054 0686  
                         l1046 0675                           l1038 0664                           l1128 0602  
                         l1056 05F3                           l1048 0678                           l1072 060E  
                         l1080 05DB                           l1058 05F4                           l1066 05FA  
                         l1074 0615                           l1082 05DC                           l1076 061E  
                         l1084 05DE                           l1078 05D9                           _main 05D9  
                         btemp 007E                           start 0000        __end_of_reset_stopwatch 05D9  
                 ?_format_time 0070       __size_of_start_stopwatch 0005                          ?_main 0070  
                        _CMCON 001F                __end_of___lwdiv 0747          ??_handle_btn_pressing 0070  
              __end_of___lwmod 06C4                          _PORTB 0006                          _TRISA 0085  
                        _TRISB 0086      set_disp_digit_value@value 0072                          status 0003  
                        wtemp0 007E                __initialization 07F5         format_time@cashed_time 0028  
                 __end_of_main 05E1         __size_of_is_btn_bounce 0028                         ??_main 007E  
       handle_btn_pressing@btn 0072                         _Button 0026               ?_reset_stopwatch 0070  
                    ??___lwdiv 0074                      ??___lwmod 007C              ??_start_stopwatch 0070  
                _is_btn_bounce 062B        __end_of__initialization 07FE       __size_of_get_btn_pressed 003F  
                 ?_update_disp 0070                 __pcstackCOMMON 0070           __size_of_format_time 0051  
               _OPTION_REGbits 0081                 ?_is_btn_bounce 0070             __size_of_configure 0011  
                   __pbssBANK0 0020                     __pmaintext 05D9  __size_of_set_disp_digit_value 005D  
  __end_of_update_time_counter 062B                  _is_timer_work 0025        __size_of_stop_stopwatch 0004  
            ??_get_btn_pressed 0073              __end_of_configure 05F2    __end_of_handle_btn_pressing 060E  
                      ___lwdiv 0703                        ___lwmod 068A                        __ptext1 060E  
                      __ptext2 0653                        __ptext3 0798                        __ptext4 0747  
                      __ptext5 068A                        __ptext6 0703                        __ptext7 05F2  
                      __ptext8 05CA                        __ptext9 05CE                ??_is_btn_bounce 0070  
                      _time_ms 0023           end_of_initialization 07FE           __size_of_update_disp 0037  
              _start_stopwatch 05CE                      _PORTAbits 0005                 is_btn_bounce@i 0071  
               _formatted_time 0020       __size_of_reset_stopwatch 0006            start_initialization 07F5  
               _stop_stopwatch 05CA        __end_of_start_stopwatch 05D3                  ??_format_time 0027  
 __end_of_set_disp_digit_value 07F5                      ___latbits 0000                  __pcstackBANK0 0027  
       __end_of_stop_stopwatch 05CE                _get_btn_pressed 06C4               ___lwdiv@dividend 0072  
                     ?___lwdiv 0070                       ?___lwmod 0078                      _configure 05E1  
          __end_of_format_time 0798   __size_of_update_time_counter 001D               ___lwdiv@quotient 0075  
              ?_stop_stopwatch 0070              ??_reset_stopwatch 0070               ?_start_stopwatch 0070  
                   ?_configure 0070   __size_of_handle_btn_pressing 001C        __end_of_get_btn_pressed 0703  
        __end_of_is_btn_bounce 0653                  ??_update_disp 002A           _set_disp_digit_value 0798  
                  _format_time 0747               __size_of___lwdiv 0044               __size_of___lwmod 003A  
              ___lwdiv@divisor 0070                ___lwdiv@counter 0077                       __ptext10 05D3  
                     __ptext11 06C4                       __ptext12 062B                       __ptext13 05E1  
                __size_of_main 0008          ?_set_disp_digit_value 0070                    ??_configure 0070  
          __end_of_update_disp 068A                     _INTCONbits 000B               ?_get_btn_pressed 0070  
             ___lwmod@dividend 007A            _update_time_counter 060E                _reset_stopwatch 05D3  
                   _OPTION_REG 0081                ___lwmod@divisor 0078               ??_stop_stopwatch 0070  
              ___lwmod@counter 007D           ?_update_time_counter 0070             get_btn_pressed@btn 0074  
       ??_set_disp_digit_value 0070            _handle_btn_pressing 05F2               is_btn_bounce@btn 0070  
